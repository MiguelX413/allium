use cbindgen::{Config, Language};
use std::env;

fn main() {
    let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();

    let common = cbindgen::Builder::new()
        .with_config(Config::from_file("cbindgen.toml").expect("Unable to parse cbindgen.tomlc"))
        .with_crate(crate_dir)
        .with_autogen_warning(
            "/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */",
        )
        .with_include_version(true)
        .include_item("Token")
        .with_no_includes();
    common
        .clone()
        .with_language(Language::Cxx)
        .with_namespace("basado")
        .generate()
        .expect("Unable to generate bindings.hpp")
        .write_to_file("bindings.hpp");
    common
        .with_language(Language::C)
        .with_item_prefix("basado_")
        .generate()
        .expect("Unable to generate bindings.h")
        .write_to_file("bindings.h");
}
